Web Technologies and React
==========================
VM may be s-l-o-w 

in VS Code add 'live server' extension 
(a handy development server)

Feel free to use any resources you find online 

Monday 12th August
- Overview of web technologies and online resources
- Stuff that matters, stuff that you can be lax about
- HTML and CSS
- JavaScript
> fix my complex stateful robot example
> how can we have the browser validate AND prevent default...(see React....)
> - const fn=()=>{} ...
Tuesday 13th August
- Financial Concepts (all day)
Wednesday 14th August
- React - can be used with ExpressJS, with pure JS, with many tools, with NextJS ..., with vite
Steps to make a new React Project:
(first ensure you have NodeJS installed at a recent version)
Pick a location, open a  terminal and enter:
    npx create-next-app@latest --template bootstrap
Answer the questions as you see fit
Change directory into your newly-created project folder
    cd my-app (or whatever you called it)
Invoke the development server
    npm run dev
Browse to https://localhost:3000
from here on, it's a matter of editing the files in your new project......

> how do we know it's index.js or app.js pr home.js depends on flavour of React....????
> how may we conditionally render components
> do we have to stick to this immutability doobrie
    no, any JS is valid anywhere, but React expects immutable
> are there consequences
> can we pass arguments for React event handlers??????
 try: npm install --global @create-next-app/core
 then npm create-next-app@latest --template bootstrap
 npx will download and execute without installing
> whats with the underscores???
> and Yarn


- NodeJS - lets us run JS on the server (or anywhere) It is the JS engine from chrome
  - NB we need Node 20 or better!!
- async JS, promises ....
> keeping pace (and secure) with external libraries
Thursday 15th August
- Guest Speaker
- Project Time
Friday 16th August
- React and Web loose ends
  q - how to organize React code
  > JavaScript XML (jsx)
  > async fetch in React: useEffect (also lifecycle and dependencies)
  > iterating with Array.map() ( also Array.filter() )
  > using Fragment and key
  > challenge: consume an API
  > production build (and deployment) npm run prod
  > .then() (an alternative to async/await)
  > be aware of Axios (https://axios-http.com/docs/intro)
  - responsive CSS overview
  - loose ends: architecture, resources
- Just after lunch: Knowledge-check
- Most of the afternoon: Project Time
At some point today: end-of-week feedback (online form)

Next week: Project presentations on afternoon of Friday 23rd Aug